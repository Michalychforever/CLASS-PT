-1/4*(Csc[nu1*Pi]*Csc[nu2*Pi]*Csc[(nu1 + nu2)*Pi]*((64*nu1^4*(-1 + nu2)*nu2 + 4*nu1^3*(3 + 26*nu2 - 80*nu2^2 + 48*nu2^3) + nu2*(39 - 20*nu2 - 124*nu2^2 + 128*nu2^3 - 32*nu2^4) + 4*nu1^2*(-3 + 28*nu2 + 44*nu2^2 - 120*nu2^3 + 48*nu2^4) + nu1*(-9 - 152*nu2 + 168*nu2^2 + 200*nu2^3 - 256*nu2^4 + 64*nu2^5))*Sin[2*nu1*Pi] + (32*nu1^5*(-1 + 2*nu2) + 64*nu1^4*(2 - 4*nu2 + 3*nu2^2) + 3*nu2*(-3 - 4*nu2 + 4*nu2^2) + 4*nu1^3*(-31 + 50*nu2 - 120*nu2^2 + 48*nu2^3) + nu1*(39 - 152*nu2 + 112*nu2^2 + 104*nu2^3 - 64*nu2^4) + 4*nu1^2*(-5 + 42*nu2 + 44*nu2^2 - 80*nu2^3 + 16*nu2^4))*Sin[2*nu2*Pi] + (64*nu1^4*(-1 + nu2)*nu2 + 3*nu2*(3 + 4*nu2 - 4*nu2^2) + 4*nu1^3*(-3 + 30*nu2 - 56*nu2^2 + 32*nu2^3) + nu1*(9 - 128*nu2 + 48*nu2^2 + 120*nu2^3 - 64*nu2^4) + 4*nu1^2*(3 + 12*nu2 + 28*nu2^2 - 56*nu2^3 + 16*nu2^4))*Sin[2*(nu1 + nu2)*Pi]))/(nu1*(-1 + 4*nu1^2)*nu2*(-5 + 2*nu1 + 2*nu2)*(-1 + 4*nu2^2))